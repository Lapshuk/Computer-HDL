/* 
 Chapter No. 2 â€“ Project No.3 

 Programmer: Roman Lapshuk 

 Date Last Modified: February 11, 2015

*/
// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //choosing the one of 8 ram8 chips to write
    //first part of address is pointing to a specific ram
    DMux8Way(in=load,sel=address[0..2],a=load0,b=load1,c=load2,d=load3,e=load4,f=load5,g=load6,h=load7);

    //second part of address pointing on a specific register inside the ram specified ram8
    RAM8(in=in,load=load0,address=address[3..5],out=ramout0);
    RAM8(in=in,load=load1,address=address[3..5],out=ramout1);
    RAM8(in=in,load=load2,address=address[3..5],out=ramout2);
    RAM8(in=in,load=load3,address=address[3..5],out=ramout3);
    RAM8(in=in,load=load4,address=address[3..5],out=ramout4);
    RAM8(in=in,load=load5,address=address[3..5],out=ramout5);
    RAM8(in=in,load=load6,address=address[3..5],out=ramout6);
    RAM8(in=in,load=load7,address=address[3..5],out=ramout7);
    
    //reading from one of ram8 chips
    Mux8Way16(a=ramout0,b=ramout1,c=ramout2,d=ramout3,e=ramout4,f=ramout5,g=ramout6,h=ramout7,sel=address[0..2],out=out);
}